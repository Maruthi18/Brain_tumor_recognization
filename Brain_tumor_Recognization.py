# -*- coding: utf-8 -*-
"""Brain_Tumor_Rv_College_Linear_Regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dkkmCuX0cLyom6_1JRPvJ75inQpv7BJ0
"""

from google.colab import files
files.upload()

# Commented out IPython magic to ensure Python compatibility.
#import the libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
# %matplotlib inline

#gather The Data
dataset = pd.read_csv("dataset.csv")
print(dataset.shape)

dataset.head()

dataset.head(30)

#lets find the relation b/w the Headsize and brain weight

X = dataset['Head Size(cm^3)'].values
Y = dataset['Brain Weight(grams)'].values

# lets find the mean of our input data

x_mean = np.mean(X)
y_mean = np.mean(Y)

# we neeed  total no of entries

n = len(X)

# let us use the formula to calculate b0 and b1

numerator = 0
denominator = 0

for i in range(n):
  numerator = numerator + (X[i] - x_mean) * (Y[i] - y_mean)
  denominator = denominator + (X[i] - x_mean) **2

  b1 = numerator/denominator
  b0 = y_mean - (b1*x_mean)

#printing the values
print(b1)
print(b0)

# lets plot the graph

x_max  = np.max(X) + 100
x_min  = np.min(X) + 100

# calculate the x and y  line value

x = np.linspace(x_min , x_max , 1000)

y = b0 + b1*x

# lets draw the  line 

plt.plot(x , y , color = '#00ff00', label = 'Linear Regression')

#lets plot the datapoints or observations

plt.scatter(X , Y , color = '#ff0000' , label = 'Data Points' )

#lets label the axis

plt.xlabel('Head Size(cm^3)')
plt.ylabel('Brain Weight(grams)')

plt.legend()
plt.show()

# Lets Find the RMSE error
rmse = 0
for i in range(n):
  y_pred = b0 + b1*X[i]
  rmse += (Y[i] - y_pred) **2

rmse = np.sqrt(rmse/n)
print(rmse)

# R2 score

sst = 0
ssr = 0

for i in range(n):
  y_pred = b0 + b1*X[i]
  sst += (Y[i] - y_mean) **2
  ssr += (Y[i] - y_pred) **2

score = 1 - (ssr/sst)
print(score)

